<?php

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Ajax\ReplaceCommand;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\user\Entity\User;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;
use Drupal\block\Entity\Block;
use Drupal\file\Entity\File;
use Drupal\Core\Render\Element\PasswordConfirm;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\CssCommand;
use Drupal\Core\Ajax\RedirectCommand;
use Drupal\taxonomy\Entity\Term;

use Drupal\webform\Entity\Webform;
use Drupal\webform\Entity\WebformSubmission;
use Drupal\webform\WebformSubmissionForm;

/**
 * Implements hook_preprocess_html().
 */
function custom_user_register_preprocess_html(&$variables)
{

}

function custom_user_register_views_pre_render(\Drupal\views\ViewExecutable $view)
{

}


function custom_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{

  if ($form_id == 'user_login_form') {


    $form['name']['#prefix'] = '<div class="row"><div class="col-md-6 eventjini_left"><div class ="namewrap">';
    $form['name']['#suffix'] = '</div>';
    $form['pass']['#prefix'] = '<div class ="passwrap">';
    $form['pass']['#suffix'] = '</div>';
    $form['actions']['#prefix'] = '<div class ="buttonwrap">';
    $form['actions']['#suffix'] = '</div></div>';

    
    $form['some_text'] = array(
              '#type' => 'item',
              '#markup' => 'if you registered through Eventjini, log in <a href="/moLogin">here</a><img class="logo_eventjini" src="https://donate.oxfamindia.org/donatetoeducate/ravi/eventjini_logo.jpg">',
          '#prefix' =>'<div class="col-md-5 eventjini_right">',
          '#suffix'=> '</div></div>',
          '#weight' =>200,
          );
    
  }

  if ($form_id == 'user_pass') {
    $form['#submit'][] = 'custom_registration_user_reset_password';
  }
  if ($form_id == 'user_form') {
    $form['account']['pass']['#description'] = 'Password must have one uppercase, numeric, special character and password length minimum 8';

    $form['actions']['submit']['#submit'][] = 'custom_registration_user_reset_confirm_password';
  }

  /**************** Start New code for vtw ********************/
  if ($form_id == 'webform_submission_subscribers_add_form' || $form_id == 'webform_submission_subscribers_edit_form') {
    $form['actions']['submit']['#submit'][] = 'custom_registration_user_webform_add_subscribers';
  }
  /**************** End New code for vtw ********************/
   if ($form_id == 'webform_submission_registration_edit_form') {
	  
	  
	 if($form['elements']['flexbox_02']['institution']['#default_value'] == 'nayaraenergy'){

      unset($form['elements']['flexbox_07']['challenge_slot']['#options'][2042]);
	  unset($form['elements']['flexbox_07']['challenge_slot']['#options'][20]);
    //kint($form['elements']['flexbox_02']['institution']['#default_value']);
    }
	
	if($form['elements']['flexbox_02']['institution']['#default_value'] == 'alvarezandmarsal'){

      unset($form['elements']['flexbox_07']['challenge_slot']['#options'][2042]);
	  unset($form['elements']['flexbox_07']['challenge_slot']['#options'][20]);
    //kint($form['elements']['flexbox_02']['institution']['#default_value']);
    }
    //die();
    $form['actions']['submit']['#submit'][] = 'custom_registration_user_webform_register';
  }  
	  
	  
	  
	  
    // $form['actions']['submit']['#submit'][] = 'custom_registration_user_webform_register';
  // }
}

function custom_registration_user_reset_password(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{
  $response = Url::fromUserInput('/password-reset-success');
  $form_state->setRedirectUrl($response);
}

function custom_registration_user_reset_confirm_password(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{
  $response = Url::fromUserInput('/dashboard');
  $form_state->setRedirectUrl($response);
}

function custom_user_register_preprocess_page(&$variables)
{


  $entity = \Drupal::entityTypeManager()->getStorage('user')->create(array());
  $formObject = \Drupal::entityTypeManager()
    ->getFormObject('user', 'register')
    ->setEntity($entity);
  $form = \Drupal::formBuilder()->getForm($formObject);
  $variables['register_form'] = \Drupal::service('renderer')->render($form);

  $form = \Drupal::formBuilder()->getForm(\Drupal\user\Form\UserLoginForm::class);
  $render = \Drupal::service('renderer');
  $variables['login_form'] = $render->render($form);
}

function getActiveEvents()
{
  $query = \Drupal::entityQuery('node')
    ->condition('status', 1) //published or not
    ->condition('type', 'events') //content type
    ->condition('field_active_status', 1); //content type
  $nids = $query->execute();
  $event_list = array();
  foreach ($nids as $nid) {
    $node = \Drupal\node\Entity\Node::load($nid);
    $event_list[$nid] = $node->title->value;
    //...
  }

  return ($event_list);
}

function setMessage(array $form, FormStateInterface $form_state)
{
  drupal_get_messages();
  $uname = $form_state->getValue('name');
  $database = \Drupal::database();
  $query = $database->select('users_field_data', 'u');
  $orGroup = $query->orConditionGroup()
    ->condition('u.name', $uname, '=')
    ->condition('u.mail', $uname, '=');
  $query->condition($orGroup);
  $query->fields('u', ['name']);
  $result = $query->execute()->fetchField();
  if ($result != FALSE) {
    $uname = $result;
  }
  global $user;
  $response = new AjaxResponse();
  $uid = \Drupal::service('user.auth')->authenticate($uname, $form_state->getValue('pass'));
  if ($uid == TRUE) {
    $user = \Drupal\user\Entity\User::load($uid);
    user_login_finalize($user);
    $command = new RedirectCommand('/dashboard');
    return $response->addCommand($command);

  } else {
    $response->addCommand(
      new HtmlCommand(
        '.result_message',
        '<div class="my_top_message">Unrecognized username or password. <a href="/user/password">Forgot your password?</a></div>'),
    );
    return $response;
  }


}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_user_register_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	/* //if ($form_id == 'MY_FORM_ID') {
//Acenture k lea T&c
      $form['tos'] = [
      '#type'          => 'checkbox',
      '#title'         => t(' I agree to the event <a target="_bllank" href="/term-of-use">Terms and Conditions</a> & <a target="_bllank" href="https://www.oxfamindia.org/privacy-security"> Oxfam India’s privacy and security policy </a>' ),
	  /* t(' I agree to the event <a target="_bllank" href="/term-of-use">Terms and Conditions</a>),
By sharing your details, you agree to receive tax receipt, stories and updates from Oxfam India via mobile, Whatsapp, landline, email, and post. If you’d like to change this, please send us an email on friendsofoxfam@oxfamindia.org'), 
      '#required'      => TRUE,
     // '#default_value' => TRUE,
	   '#weight' => 12,
    ];
	$form['tos11'] = [
      '#type'          => 'checkbox',
      '#title'         => t('By sharing your details, you agree to receive <strong>tax receipt</strong>, stories and updates from Oxfam India via mobile, Whatsapp, landline, email, and post. If you’d like to change this, please send us an email on friendsofoxfam@oxfamindia.org'),
      '#required'      => TRUE,
     // '#default_value' => TRUE,
	  	'#weight' => 13,
    ];   */
   
  /*register form ui suffix, prefix and alternation work*/ 
  $form['#prefix'] = '<div class="modal-body">';
  $form['#suffix'] = '</div>';
  unset($form['account']['mail']['#title']);
  unset($form['account']['mail']['#description']);

  unset($form['account']['name']['#title']);
  unset($form['account']['name']['#description']);
  $form['account']['name']['#attributes']['placeholder'] = t('Username');
  $form['account']['name']['#attributes']['class'][] = 'form-control';
  $form['account']['mail']['#attributes']['placeholder'] = t('Email Address');
  $form['account']['mail']['#attributes']['class'][] = 'form-control';
  $form['account']['pass']['#description'] = 'Minimum 8 characters — include at least one uppercase letter, one number and one special character.';
}

function custom_user_registration_form_user_register_form_process_pass(&$element, FormStateInterface $form_state, &$complete_form)
{
  $element = PasswordConfirm::processPasswordConfirm($element, $form_state, $complete_form);
  unset($element['pass1']['#title']);
  unset($element['pass2']['#title']);
  $element['pass1']['#placeholder'] = t('Create Password');
  $element['pass2']['#placeholder'] = t('Confirm Password');
  return $element;
}

function SalesforceResponse_cor($data)
{
  $curl = curl_init();
  curl_setopt_array($curl, array(
    //CURLOPT_PORT => "8443",
    CURLOPT_URL => "https://login.salesforce.com/services/oauth2/token?",
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_ENCODING => "",
    CURLOPT_MAXREDIRS => 10,
    CURLOPT_TIMEOUT => 100,
    CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_CUSTOMREQUEST => "POST",
    CURLOPT_POSTFIELDS => "grant_type=password&client_id=3MVG9ZL0ppGP5UrAnDoDW3hqXg_ipjDKSijhdORrja6kLzssSK6QQg5dSYACBU12x.GP6MFTX_Q4iw7TEh_4k&client_secret=89E2293FEA44330BA6E1EFCCE718C28990451A2966F571570ABD1E52187F9ED6&username=websiteintegrationsf@oxfamindia.org&password=OxfamIndia@1234",
    CURLOPT_HTTPHEADER => array(
      "Content-Type: application/x-www-form-urlencoded"
    ),
  ));
  $product_type = 'OT';
  $response = curl_exec($curl);
  curl_close($curl);
  $character = json_decode($response);


  $token = $character->access_token;
  $status = 'Promise';
  if ($data['payment_status'] == 'Success') {
    $status = 'Successful';
    $domestic = 'Foreign Passport';
  }
  $nationalitys = 'Foreign Passport';
  $domestic = 'International';
  if ($data['nationality'] == 'Indian') {
    $nationalitys = 'Indian Passport';
    $domestic = 'domestic';
  }
  $nationalitys = '';
  $domestic = '';
  $today_timestamp = time();
  $order_id = 'VTWdonate' . $data['user_id'] . '-' . $today_timestamp;

  /* $domestic = $data['nationality']; */
  $node = Node::load($data['challenge_slot']);
  $eventname = "VTM-" . $data['challenge_type'] . ' ' . $node->get('title')->value;


  $mobileno = explode(' ', $data['mobile_number']);
  $ext = $mobileno[0];
  array_shift($mobileno);
  $mos = implode("", $mobileno);

  $user_country_name = \Drupal::service('country_manager')->getList()[$data['country']['country_code']]->__toString();
  /* echo $user_country_name.'<pre>'; print_r($character); echo '</pre>'.$mobileno[0];

echo $eventname.'<pre>'; print_r($data); echo '</pre>'.$mobileno[1];exit;    */

  $post_fields = array(

    "transList" => array(
      "0" => array(

        "Name" => $data['user_id'],
        "Donation_contribution_amount__c" => $data['amount'],
        "Donation_bgtxnid__c" => $data['user_id'],
        "Payment_transaction_id__c" => $order_id,
        "Payment_contribution_date__c" => date('Y-m-d H:i:s'),
        "Donor_First_Name__c" => $data['first_name'],
        "Donor_Last_Name__c" => $data['last_name'],
        "Donor_Email_ID__c" => $data['email_address'],
        "Donor_DOB__c" => $data['date_of_birth'],
        // "Donor_DOB__c" => $dob_dummy,
        "Product_Type__c" => $product_type,
        "Donor_Gender__c" => $data['gender'],
        "Billing_Address__c" => $data['address'],
        "City__c" => $data['city'],
        "State__c" => $data['country']['administrative_area'],
        "Country__c" => $user_country_name,
        "Nationality__c" => $nationalitys,
        "Pincode__c" => $data['zip_code'],
        "Donor_Mobile_No__c" => $mos,
        "Donor_Emergency_Contact_No__c" => $ext,
        "Donor_Organisation__c" => $data['institution'],
        "Payment_update_time__c" => '',
        "Payment_payment_status__c" => $status,
        "Payment_other_values__c" => '',
        "Payment_pg_txn_id__c" => $order_id,
        "Payment_pg_transaction_ref_no__c" => '',
        "Spouse_Gift_Message__c" => '',
        "Payment_payment_type__c" => 'offline',
        "Payment_payment_for__c" => 'Registration',
        "Payment_gateway_type__c" => 'CCAvenue',
        "Payment_payment_type_mode__c" => $domestic,
        /* "Payment_gateway_mode__c" => $domestic, */
        "Payment_payment_mode__c" => $data['payment_mode'],
        //	"Payment_gateway_response__c" => $data['gateway_response'],
        "Donation_tenure__c" => '',
        "Payment_refund__c" => '',
        "Payment_cheque_no__c" => '',
        "Payment_cheque_due_date__c" => '',

        "Addcertname__c" => '',
        "Sharewithteam__c" => '',
        "Donation_contri_for__c" => 'General',
        "Donation_campaign_id__c" => 'Virtual trailwalker',
        "Donation_hmn_campaign_id__c" => $data['registration_url'],
        "Donor_Passport_Number__c" => '',
        "Donor_PAN_Number__c" => $data['pan_card_number'],
        "Donation_donate_campaign_type__c" => '',
        "Donation_page_url__c" => 'https://virtualtrailwalker.oxfamindia.org/user/register',

        "Donation_contribution_date_unix__c" => date('Y-m-d H:i:s'),
        "Donation_flag__c" => '',
        "Donation_disclaimer__c" => '',
        "Address_2__c" => '',
        "Address_3__c" => '',
        "Spouse__c" => '',
        "Spouse_Mobile_No__c" => '',
        "Spouse_Gift_Message__c" => '',
        "Donation_how_did_you_hear_about__c" => ' ',
        "Donation_name_of_the_fundraiser__c" => ' ',
        "Testimonial__c" => ' ',
        "Payment_transaction_id__c" => $order_id,
        "Donation_team_id__c" => '',
        "Event_Name__c" => trim($eventname),
        "Event_Location__c" => 'Virtual Trailwalker',
        "Donor_T_Shirt_Size__c" => '',
        "Team_ID__c" => '',
        "Team_Registration__c" => 'Corporate',
        "Registration_Type__c" => 'Offline',
        "Team_Registration_Date__c" => date('Y-m-d H:i:s'),
        "Team_Name__c" => '',
      )
    )
  );

  /*  echo $eventname.'<pre>'; print_r($data); echo '</pre>'.$mobileno[1];exit; 		 */

  $post_fields = (object)$post_fields;

  $post_fields = json_encode($post_fields, true);

  $header = array(
    "Authorization: Bearer $token",
    "Content-Type: application/json"
  );
  $curl = curl_init();
  $params = array(
    CURLOPT_URL => "https://oxfam.my.salesforce.com/services/apexrest/TransactionEntry/",
    CURLOPT_RETURNTRANSFER => true,
    //CURLOPT_HEADER => true,
    CURLOPT_MAXREDIRS => 10,
    CURLOPT_TIMEOUT => 30,
    CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
    CURLOPT_CUSTOMREQUEST => "POST",
    //CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_POSTFIELDS => $post_fields,
    CURLOPT_HTTPHEADER => $header
  );

  curl_setopt_array($curl, $params);
  $response = curl_exec($curl);
  $err_no = curl_errno($curl);
  $err = curl_error($curl);
  curl_close($curl);
  $result = json_decode($response, true);
  $x = $result[0]['Status'];


  $webform_submission = WebformSubmission::load($data['submission_id']);

  $datas = $webform_submission->getData();
  $datas['salesforce_status'] = $result[0]['Status'];
  $datas['payment_status'] = "Success";
  //$datas['mailer'] = $status;
  $datas['mailer'] = 'Successful';

  // Set submission data.
  $webform_submission->setData($datas);

  // Save submission.
  $webform_submission->save();


}

/**************** Start New code for vtw ********************/
function custom_registration_user_webform_add_subscribers(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{

  $current_user = \Drupal::currentUser();
  $loggedin_user = User::load(\Drupal::currentUser()->id());
//kint($loggedin_user);
//kint($loggedin_user->get('field_webform')->getValue()[0]['value']);
//die('in the form');
  $roles = $current_user->getRoles();
  $loggedin_user = User::load(\Drupal::currentUser()->id());

  $webform_submission_id = $loggedin_user->get('field_webform')->getValue()[0]['value'];
  $webform_submission = WebformSubmission::load($webform_submission_id);
  $first_webform_data = $webform_submission->getData();

  $second_webform_submission_id = $form_state->getFormObject()->getEntity()->id();
  $second_webform_submission = WebformSubmission::load($second_webform_submission_id);

  $values = \Drupal::request()->request->all();

  $user_name = $loggedin_user->getUsername();
  $user_mail = $loggedin_user->getEmail();


  $user_country = $first_webform_data['country'];
  $user_pincode = $first_webform_data['zip_code'];
  $user_city = $first_webform_data['city'];
  $user_number = $first_webform_data['mobile_number'];
  $user_add = $first_webform_data['address'];
  $user_nationality = $first_webform_data['nationality'];
  $user_country_name = \Drupal::service('country_manager')->getList()[$user_country['country_code']]->__toString();


  $user_id = $loggedin_user->id();
  $submission_id = $second_webform_submission_id;
  $user_name = $user_name;
  $user_address = $user_add;
  $user_pincode = $user_pincode;
  $user_city = $user_city;
  $user_state = $user_country['administrative_area'];

  $user_mobile = $user_number;
  $user_mail = $user_mail;
  $country = $user_country_name;
  $challenge_slot = $values['challenge_slot'];
  $node = Node::load($challenge_slot);
  $event_fee = $node->get('field_event_fee')->value;


  if (empty($user_nationality)) {
    $user_nationality = 'Indian';
  }

  if (empty($user_state)) {
    $user_state = 'NA';
  }


  include('src/Form/Crypto.php'); //for data encryption
  $ccavenue_config = \Drupal::config('custom_user_register.ccavenue_config');
  $get_cc_amount = $ccavenue_config->get('ccavenue_amount');
  $cc_amount = $event_fee;
  $second_webform_id = $second_webform_submission->getWebform()->id();

  if ($user_nationality == 'Indian') {
    $marchant_id = $ccavenue_config->get('marchant_id');
    $working_key = $ccavenue_config->get('working_key');
    $access_code = $ccavenue_config->get('access_code');
  } else {
    $marchant_id = $ccavenue_config->get('international_marchant_id');
    $working_key = $ccavenue_config->get('international_working_key');
    $access_code = $ccavenue_config->get('international_access_code');
  }
  $site_redirect_url = $ccavenue_config->get('site_redirect_url');
  $site_cancel_url = $ccavenue_config->get('site_cancel_url');

  if ($user_nationality == 'Indian') {
    $nationality = $user_nationality;
    $site_redirect_url = $site_redirect_url . '?n=' . $nationality . '&w=' . $second_webform_id;
    $site_cancel_url = $site_cancel_url . '?n=' . $nationality . '&w=' . $second_webform_id;
  } else {
    $nationality = $user_nationality;
    $site_redirect_url = $site_redirect_url . '?n=' . $nationality . '&w=' . $second_webform_id;
    $site_cancel_url = $site_cancel_url . '?n=' . $nationality . '&w=' . $second_webform_id;
  }
  $ccavenue_url = $ccavenue_config->get('ccavenue_url');
  $today_timestamp = time();
  $cc_avenue_data = array();
  $cc_avenue_data['merchant_id'] = $marchant_id;
  $cc_avenue_data['order_id'] = 'VTWdonate' . $user_id . '-' . $today_timestamp;
  $cc_avenue_data['amount'] = $cc_amount;
  $cc_avenue_data['currency'] = 'INR';
  $cc_avenue_data['redirect_url'] = $site_redirect_url;
  $cc_avenue_data['cancel_url'] = $site_cancel_url;
  $cc_avenue_data['language'] = 'EN';
  $cc_avenue_data['billing_name'] = $user_name;
  $cc_avenue_data['billing_address'] = $user_address;
  $cc_avenue_data['billing_city'] = $user_city;
  $cc_avenue_data['billing_state'] = $user_state;
  $cc_avenue_data['billing_zip'] = $user_pincode;
  $cc_avenue_data['billing_country'] = $country;
  $cc_avenue_data['billing_tel'] = $user_mobile;
  $cc_avenue_data['billing_email'] = $user_mail;
  //$cc_avenue_data['payment_option'] = 'OPTDBCRD';
  //$cc_avenue_data['merchant_param1'] = $submission_id;
  $cc_avenue_data['merchant_param2'] = $user_id;
  $cc_avenue_data['merchant_param3'] = $challenge_slot;
  $cc_avenue_data['merchant_param4'] = $submission_id;
  $merchant_data = '';
  foreach ($cc_avenue_data as $key => $value) {
    $merchant_data .= $key . '=' . urlencode($value) . '&';
  }
  $encrypted_data = encrypt($merchant_data, $working_key); // Method for encrypting the data.
  echo '<html>
    <head>
    <title> Non-Seamless-kit</title>
    </head>
    <body>
    <center><form method="post" name="redirect" action="' . $ccavenue_url . '">
    <input type="hidden" name="encRequest" value="' . $encrypted_data . '">
    <input type="hidden" name="access_code" value="' . $access_code . '">
    </form>
    </center>
    <script language="javascript">document.redirect.submit();</script>
    </body>
    </html>';
  exit;


}

/**************** End New code for vtw ********************/


function custom_registration_user_webform_register(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{

  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();
  $loggedin_user = User::load(\Drupal::currentUser()->id());

  $webform_submission_id = $form_state->getFormObject()->getEntity()->id();
  $values = \Drupal::request()->request->all();

  $user_name = $values['username'];
  $user_mail = $values['email_address'];
  $user_country = $values['country'];
  $user_pincode = $values['zip_code'];
  $user_city = $values['city'];
  $user_number = $values['mobile_number'];
  $user_add = $values['address'];
  $user_nationality = $values['nationality'];
  $user_country_name = \Drupal::service('country_manager')->getList()[$user_country['country_code']]->__toString();
  $user_id = $values['user_id'];;
  $submission_id = $webform_submission_id;
  $user_name = $user_name;
  $user_address = $user_add;
  $user_pincode = $user_pincode;
  $user_city = $user_city;
  $user_state = $user_country['administrative_area'];
  $user_mobile = $user_number;
  $user_mail = $user_mail;
  $country = $user_country_name;
  $challenge_slot = $values['challenge_slot'];
  $node = Node::load($challenge_slot);
  $event_fee = $node->get('field_event_fee')->value;
  $donation_money_value = $values['donation_money'];

  if (!empty($values['manual_amount'])) {
    $manual_amount = $values['manual_amount'];
  } else {
    $manual_amount = '';
  }
  if (!empty($values['manual_transaction_date'])) {
    $manual_transaction_date = $values['manual_transaction_date'];
  } else {
    $manual_transaction_date = '';
  }
  if (empty($user_state)) {
    $user_state = 'NA';
  }
  if (!empty($user_nationality) && !$loggedin_user->hasRole('sales')) {

    include('src/Form/Crypto.php'); //for data encryption
    $ccavenue_config = \Drupal::config('custom_user_register.ccavenue_config');
    $get_cc_amount = $ccavenue_config->get('ccavenue_amount');
    /*if($challenge_slot == 20){
       $cc_amount = $get_cc_amount*2;
     }else{
        $cc_amount = $get_cc_amount;
        print_r($event_fee);
        die('here');
     }*/

    $cc_amount = $event_fee;
    

    if($donation_money_value!=''){
      $cc_amount = (int)$donation_money_value + (int)$cc_amount;
    }
    /*if (!empty($values['donation_amount']['select'])) {
      if ($values['donation_amount']['select'] == '_other_') {
        $cc_amount = (int)$values['donation_amount']['other'] + (int)$cc_amount;
      } else {
        $cc_amount = (int)$values['donation_amount']['select'] + (int)$cc_amount;
      }

    }*/

    //print_r('event fee'.$event_fee);
    //print_r('event plus donation amount'.$cc_amount);
    //die('here');


    if ($user_nationality == 'Indian') {
      $marchant_id = $ccavenue_config->get('marchant_id');
      $working_key = $ccavenue_config->get('working_key');
      $access_code = $ccavenue_config->get('access_code');
    } else {
      $marchant_id = $ccavenue_config->get('international_marchant_id');
      $working_key = $ccavenue_config->get('international_working_key');
      $access_code = $ccavenue_config->get('international_access_code');
    }
    $site_redirect_url = $ccavenue_config->get('site_redirect_url');
    $site_cancel_url = $ccavenue_config->get('site_cancel_url');

    if ($user_nationality == 'Indian') {
      $nationality = $user_nationality;
      $site_redirect_url = $site_redirect_url . '?n=' . $nationality;
      $site_cancel_url = $site_cancel_url . '?n=' . $nationality;
    } else {
      $nationality = $user_nationality;
      $site_redirect_url = $site_redirect_url . '?n=' . $nationality;
      $site_cancel_url = $site_cancel_url . '?n=' . $nationality;
    }
    $ccavenue_url = $ccavenue_config->get('ccavenue_url');
    $today_timestamp = time();
    $cc_avenue_data = array();
    $cc_avenue_data['merchant_id'] = $marchant_id;
    $cc_avenue_data['order_id'] = 'VTWdonate' . $user_id . '-' . $today_timestamp;
    $cc_avenue_data['amount'] = $cc_amount;
    $cc_avenue_data['currency'] = 'INR';
    $cc_avenue_data['redirect_url'] = $site_redirect_url;
    $cc_avenue_data['cancel_url'] = $site_cancel_url;
    $cc_avenue_data['language'] = 'EN';
    $cc_avenue_data['billing_name'] = $user_name;
    $cc_avenue_data['billing_address'] = $user_address;
    $cc_avenue_data['billing_city'] = $user_city;
    $cc_avenue_data['billing_state'] = $user_state;
    $cc_avenue_data['billing_zip'] = $user_pincode;
    $cc_avenue_data['billing_country'] = $country;
    $cc_avenue_data['billing_tel'] = $user_mobile;
    $cc_avenue_data['billing_email'] = $user_mail;
    //$cc_avenue_data['payment_option'] = 'OPTDBCRD';
    //$cc_avenue_data['merchant_param1'] = $submission_id;
    $cc_avenue_data['merchant_param2'] = $user_id;
    $cc_avenue_data['merchant_param3'] = $challenge_slot;
    $cc_avenue_data['merchant_param4'] = $submission_id;
    $merchant_data = '';
    foreach ($cc_avenue_data as $key => $value) {
      $merchant_data .= $key . '=' . urlencode($value) . '&';
    }
    $encrypted_data = encrypt($merchant_data, $working_key); // Method for encrypting the data.
    echo '<html>
    <head>
    <title> Non-Seamless-kit</title>
    </head>
    <body>
    <center><form method="post" name="redirect" action="' . $ccavenue_url . '">
    <input type="hidden" name="encRequest" value="' . $encrypted_data . '">
    <input type="hidden" name="access_code" value="' . $access_code . '">
    </form>
    </center>
    <script language="javascript">document.redirect.submit();</script>
    </body>
    </html>';
    exit;
	//sales Role Code 
  } elseif (!empty($user_nationality) && $loggedin_user->hasRole('sales')) {//print_r("Rohit");die;
   
   
   $webform_submission = WebformSubmission::load($webform_submission_id);

    $datass = $webform_submission->getData();
    $datass['submission_id'] = $webform_submission_id;


    SalesforceResponse_cor($datass);

    $webform_id_paid = 'subscribers';
        $webformPaid = Webform::load($webform_id_paid);

        if ($datass['challenge_slot'] == 20) {
          $slots = explode(',', $datass['active_slots']);
          foreach ($slots as $key => $value) {
            $values = [
              'webform_id' => $webformPaid->id(),
              'data' => [
                'challenge_type' => $datass['challenge_type'],
                'challenge_slot' => $value,
                'completed_distance' => 0,
                'payment_status' => 'Success',
                'office_location' => '',
              ],
              'uid' => $datass['user_id']
            ];
            $webform_submission_paid = WebformSubmission::create($values);
            $webform_submission_paid->save();
          }
        } else {
          $values = [
            'webform_id' => $webformPaid->id(),
            'data' => [
              'challenge_type' => $datass['challenge_type'],
              'challenge_slot' => $datass['challenge_slot'],
              'completed_distance' => 0,
              'payment_status' => 'Success',
              'office_location' =>'',
            ],
            'uid' => $datass['user_id']
          ];
          $webform_submission_paid = WebformSubmission::create($values);
          $webform_submission_paid->save();
        }

    
   
   
   
   /* $nodeData = [
      'type' => 'virtual_trail',
      'title' => 'Dashboard' . ' (' . $user_name . '-' . $user_id . ')',
      'uid' => $user_id,
      'field_user_name_id' => $user_id,
      'field_day1_distance' => 0,
      'field_day2_distance' => 0,
      'field_day3_distance' => 0,
      'field_day4_distance' => 0,
      'field_day5_distance' => 0,
      'field_day6_distance' => 0,
      'field_day7_distance' => 0,
      'field_day8_distance' => 0,
      'field_day9_distance' => 0,
      'field_day10_distance' => 0,
      'status' => 0,
    ]; */
    $webform_submission = WebformSubmission::load($webform_submission_id);

    $datass = $webform_submission->getData();
    $datass['submission_id'] = $webform_submission_id;

    $datass['amount'] = $manual_amount;
    $datass['transaction_date'] = $manual_transaction_date;


//SalesforceResponse_cor($datass);
    SalesforceResponseManual($datass);

    //if(!empty($datass['mailer']) && $datass['mailer'] == 'Successful') {
    $webform_submission->setElementData('mailer', 'TEST2');
    $webform_submission->save();
    $webform_submission->setElementData('mailer', '');
    $webform_submission->save();
    // }

    /* $entity = Node::create($nodeData);
     $entity->save();*/
    $response = Url::fromUserInput('/success');
    $form_state->setRedirectUrl($response);
  } else {
    
    $webform_submission = WebformSubmission::load($webform_submission_id);

    $datass = $webform_submission->getData();
    $datass['submission_id'] = $webform_submission_id;


    SalesforceResponse_cor($datass);

    $webform_id_paid = 'subscribers';
        $webformPaid = Webform::load($webform_id_paid);

        if ($datass['challenge_slot'] == 20) {
          $slots = explode(',', $datass['active_slots']);
          foreach ($slots as $key => $value) {
            $values = [
              'webform_id' => $webformPaid->id(),
              'data' => [
                'challenge_type' => $datass['challenge_type'],
                'challenge_slot' => $value,
                'completed_distance' => 0,
                'payment_status' => 'Success',
                'office_location' => '',
              ],
              'uid' => $datass['user_id']
            ];
            $webform_submission_paid = WebformSubmission::create($values);
            $webform_submission_paid->save();
          }
        } else {
          $values = [
            'webform_id' => $webformPaid->id(),
            'data' => [
              'challenge_type' => $datass['challenge_type'],
              'challenge_slot' => $datass['challenge_slot'],
              'completed_distance' => 0,
              'payment_status' => 'Success',
              'office_location' =>'',
            ],
            'uid' => $datass['user_id']
          ];
          $webform_submission_paid = WebformSubmission::create($values);
          $webform_submission_paid->save();
        }

    $response = Url::fromUserInput('/success');
    $form_state->setRedirectUrl($response);

  }
}



function custom_user_register_user_presave($account)
{

}

function SalesforceResponseManual($data)
{
  $curl = curl_init();
  curl_setopt_array($curl, array(
    //CURLOPT_PORT => "8443",
    CURLOPT_URL => "https://login.salesforce.com/services/oauth2/token?",
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_ENCODING => "",
    CURLOPT_MAXREDIRS => 10,
    CURLOPT_TIMEOUT => 100,
    CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_CUSTOMREQUEST => "POST",
    CURLOPT_POSTFIELDS => "grant_type=password&client_id=3MVG9ZL0ppGP5UrAnDoDW3hqXg_ipjDKSijhdORrja6kLzssSK6QQg5dSYACBU12x.GP6MFTX_Q4iw7TEh_4k&client_secret=89E2293FEA44330BA6E1EFCCE718C28990451A2966F571570ABD1E52187F9ED6&username=websiteintegrationsf@oxfamindia.org&password=OxfamIndia@1234",
    CURLOPT_HTTPHEADER => array(
      "Content-Type: application/x-www-form-urlencoded"
    ),
  ));
  $product_type = 'OT';
  $response = curl_exec($curl);
  curl_close($curl);
  $character = json_decode($response);


  $token = $character->access_token;
  $status = 'Unsuccessful';
  if ($data['payment_status'] == 'Success') {
    $status = 'Successful';

  }
  $status = 'Successful';
  /*	$domestic = 'Foreign Passport';
      if($data['nationality'] == 'Indian')
    {
      $domestic = 'Indian Passport';

    }

    $domestic = $data['nationality'];*/
  $nationalitys = 'Foreign Passport';
  $domestic = 'International';
  if ($data['nationality'] == 'Indian') {
    $nationalitys = 'Indian Passport';
    $domestic = 'domestic';
  }


  /* $domestic = $data['nationality']; */
  $node = Node::load($data['challenge_slot']);
  $eventname = "VTM-" . $data['challenge_type'] . ' ' . $node->get('title')->value;

  $mobileno = explode(' ', $data['mobile_number']);
  $ext = $mobileno[0];
  array_shift($mobileno);
  $mos = implode("", $mobileno);
  $user_country_name = \Drupal::service('country_manager')->getList()[$data['country']['country_code']]->__toString();
  /* echo $user_country_name.'<pre>'; print_r($character); echo '</pre>'.$mobileno[0];

echo $eventname.'<pre>'; print_r($data); echo '</pre>'.$mobileno[1];exit;    */
  $dontate_amount_value = round($data['amount']);
  $post_fields = array(

    "transList" => array(
      "0" => array(

        "Name" => $data['user_id'],
        "Donation_contribution_amount__c" => $dontate_amount_value,
        "Donation_bgtxnid__c" => $data['user_id'],
        "Payment_transaction_id__c" => $data['order_id'],
        //"Payment_contribution_date__c" => date('Y-m-d H:i:s'),
        "Payment_contribution_date__c" => $data['transaction_date'],
        "Donor_First_Name__c" => $data['first_name'],
        "Donor_Last_Name__c" => $data['last_name'],
        "Donor_Email_ID__c" => $data['email_address'],
        "Donor_DOB__c" => $data['date_of_birth'],
        // "Donor_DOB__c" => $dob_dummy,
        "Product_Type__c" => $product_type,
        "Donor_Gender__c" => $data['gender'],
        "Billing_Address__c" => $data['address'],
        "City__c" => $data['city'],
        "State__c" => $data['country']['administrative_area'],
        "Country__c" => $user_country_name,
        "Nationality__c" => $nationalitys,
        "Pincode__c" => $data['zip_code'],
        "Donor_Mobile_No__c" => $mos,
        "Donor_Emergency_Contact_No__c" => $ext,
        "Donor_Organisation__c" => $data['institution'],
        "Payment_update_time__c" => '',
        "Payment_payment_status__c" => $status,
        "Payment_other_values__c" => '',
        "Payment_pg_txn_id__c" => $data['order_id'],
        "Payment_pg_transaction_ref_no__c" => '',
        "Spouse_Gift_Message__c" => '',
        "Payment_payment_type__c" => 'online',
        "Payment_payment_for__c" => 'Registration',
        "Payment_gateway_type__c" => 'CCAvenue',
        "Payment_payment_type_mode__c" => $domestic,
        //"Payment_gateway_mode__c" => $domestic,
        "Payment_payment_mode__c" => $data['payment_mode'],
        //	"Payment_gateway_response__c" => $data['gateway_response'],
        "Donation_tenure__c" => '',
        "Payment_refund__c" => '',
        "Payment_cheque_no__c" => '',
        "Payment_cheque_due_date__c" => '',

        "Addcertname__c" => '',
        "Sharewithteam__c" => '',
        "Donation_contri_for__c" => 'General',
        "Donation_campaign_id__c" => 'Virtual trailwalker',
        "Donation_hmn_campaign_id__c" => $data['registration_url'],
        "Donor_Passport_Number__c" => '',
        "Donor_PAN_Number__c" => $data['pan_card_number'],
        "Donation_donate_campaign_type__c" => '',
        "Donation_page_url__c" => 'https://virtualtrailwalker.oxfamindia.org/user/register',

        // "Donation_contribution_date_unix__c" => date('Y-m-d H:i:s'),
        "Donation_contribution_date_unix__c" => $data['transaction_date'],
        "Donation_flag__c" => '',
        "Donation_disclaimer__c" => '',
        "Address_2__c" => '',
        "Address_3__c" => '',
        "Spouse__c" => '',
        "Spouse_Mobile_No__c" => '',
        "Spouse_Gift_Message__c" => '',
        "Donation_how_did_you_hear_about__c" => ' ',
        "Donation_name_of_the_fundraiser__c" => ' ',
        "Testimonial__c" => ' ',
        "Payment_transaction_id__c" => $data['order_id'],
        "Donation_team_id__c" => '',
        "Event_Name__c" => trim($eventname),
        "Event_Location__c" => 'Virtual Trailwalker',
        "Donor_T_Shirt_Size__c" => '',
        "Team_ID__c" => '',
        "Team_Registration__c" => 'Individual',
        "Registration_Type__c" => 'Online',
        //	"Team_Registration_Date__c" => date('Y-m-d H:i:s'),
        "Team_Registration_Date__c" => $data['transaction_date'],
        "Team_Name__c" => '',
      )
    )
  );

  /*  echo $eventname.'<pre>'; print_r($data); echo '</pre>'.$mobileno[1];exit; 		 */

  $post_fields = (object)$post_fields;

  $post_fields = json_encode($post_fields, true);

  $header = array(
    "Authorization: Bearer $token",
    "Content-Type: application/json"
  );
  $curl = curl_init();
  $params = array(
    CURLOPT_URL => "https://oxfam.my.salesforce.com/services/apexrest/TransactionEntry/",
    CURLOPT_RETURNTRANSFER => true,
    //CURLOPT_HEADER => true,
    CURLOPT_MAXREDIRS => 10,
    CURLOPT_TIMEOUT => 30,
    CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
    CURLOPT_CUSTOMREQUEST => "POST",
    //CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_POSTFIELDS => $post_fields,
    CURLOPT_HTTPHEADER => $header
  );

  curl_setopt_array($curl, $params);
  $response = curl_exec($curl);
  $err_no = curl_errno($curl);
  $err = curl_error($curl);
  curl_close($curl);
  $result = json_decode($response, true);
  $x = $result[0]['Status'];


  $webform_submission = WebformSubmission::load($data['submission_id']);

  $datas = $webform_submission->getData();
  $datas['salesforce_status'] = $result[0]['Status'];
  $datas['mailer'] = $status;
  // Set submission data.
  $webform_submission->setData($datas);

  // Save submission.
  $webform_submission->save();


}


?>
